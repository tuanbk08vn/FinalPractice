@model FinalPractice.ViewModels.ProductFormViewModel

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Create</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>ProductViewModel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Product.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Product.Name, new { htmlAttributes = new { @class = "form-control", @Value = "Samsung S8", placeholder = "Samsung S8" } })
                @Html.ValidationMessageFor(model => model.Product.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Product.CodeSKU, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Product.CodeSKU, new { htmlAttributes = new { @class = "form-control", @Value = "SS123", placeholder = "SS123" } })
                @Html.ValidationMessageFor(model => model.Product.CodeSKU, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Category",  new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.CategoryId, new { htmlAttributes = new { @class = "form-control", @Value = "1", placeholder = "" } })*@
                @Html.DropDownListFor(m => m.Product.CategoryId, new SelectList(Model.Categories, "Id", "Name"), "Select Category Type", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Product.Id, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Sub Category", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.Product.SubCategoryId, new SelectList(Model.SubCategories, "Id", "Name"), "Select Sub Category Type", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Product.Id, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Product.Thumbnail, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Product.Thumbnail, new { htmlAttributes = new { @class = "form-control", @Value = "", placeholder = "" } })
                @Html.ValidationMessageFor(model => model.Product.Thumbnail, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Product.MainPhoto, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Product.MainPhoto, new { htmlAttributes = new { @class = "form-control", @Value = "", placeholder = "" } })
                @Html.ValidationMessageFor(model => model.Product.MainPhoto, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Product.Summary, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Product.Summary, new { htmlAttributes = new { @class = "form-control", @Value = "Test....", placeholder = "...Test" } })
                @Html.ValidationMessageFor(model => model.Product.Summary, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Product.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Product.Description, new { htmlAttributes = new { @class = "form-control", @Value = "Test................", placeholder = "Test..........." } })
                @Html.ValidationMessageFor(model => model.Product.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Product.StartDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Product.StartDate, new { htmlAttributes = new { @class = "form-control", @Value = "2017-10-26"} })
                @Html.ValidationMessageFor(model => model.Product.StartDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Product.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Product.Price, new { htmlAttributes = new { @class = "form-control", @Value = "999", placeholder = "999$" } })
                @Html.ValidationMessageFor(model => model.Product.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Product.Featured, htmlAttributes: new { @class = "control-label col-md-2", @Value = "Test........", placeholder = "Test....." })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Product.Featured, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Product.Featured, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
